{#
/**
 * @file
 * Theme override to display a table.
 *
 * Available variables:
 * - attributes: HTML attributes to apply to the <table> tag.
 * - caption: A localized string for the <caption> tag.
 * - colgroups: Column groups. Each group contains the following properties:
 *   - attributes: HTML attributes to apply to the <col> tag.
 *     Note: Drupal currently supports only one table header row, see
 *     https://www.drupal.org/node/893530 and
 *     http://api.drupal.org/api/drupal/includes!theme.inc/function/theme_table/7#comment-5109.
 * - header: Table header cells. Each cell contains the following properties:
 *   - tag: The HTML tag name to use; either 'th' or 'td'.
 *   - attributes: HTML attributes to apply to the tag.
 *   - content: A localized string for the title of the column.
 *   - field: Field name (required for column sorting).
 *   - sort: Default sort order for this column ("asc" or "desc").
 * - sticky: A flag indicating whether to use a "sticky" table header.
 * - rows: Table rows. Each row contains the following properties:
 *   - attributes: HTML attributes to apply to the <tr> tag.
 *   - data: Table cells.
 *   - no_striping: A flag indicating that the row should receive no
 *     'even / odd' styling. Defaults to FALSE.
 *   - cells: Table cells of the row. Each cell contains the following keys:
 *     - tag: The HTML tag name to use; either 'th' or 'td'.
 *     - attributes: Any HTML attributes, such as "colspan", to apply to the
 *       table cell.
 *     - content: The string to display in the table cell.
 *     - active_table_sort: A boolean indicating whether the cell is the active
         table sort.
 * - footer: Table footer rows, in the same format as the rows variable.
 * - empty: The message to display in an extra row if table does not have
 *   any rows.
 * - no_striping: A boolean indicating that the row should receive no striping.
 * - header_columns: The number of columns in the header.
 *
 * @see template_preprocess_table()
 */
#}

{%
  set classes = [
  'table',
  'table-bordered',
  'table-striped',
]
%}
<!-- Widget ID (each widget will need unique ID)-->
<div class="jarviswidget jarviswidget-color-darken no-padding no-margin">
  <header>
    <div class="widget-header">
      <span class="widget-icon"> <i class="fa fa-table"></i> </span>
      {% if caption %}
        <h2>{{ caption }}</h2>
      {% else %}
        <h2>{{ title }}</h2>
      {% endif %}
    </div>
  </header>

  <!-- widget div-->
  <div>
    <!-- widget edit box -->
    <div class="jarviswidget-editbox">
      <!-- This area used as dropdown edit box -->
      <input class="form-control" type="text">
      <span class="note"><i class="fa fa-check text-success"></i> {{ 'Change title to update and save instantly!'|t }}</span>

    </div>
    <!-- end widget edit box -->

    <!-- widget content -->
    <div class="widget-body p-0">

      {% if (summary is not empty) or (description is not empty) %}
        <div class="alert alert-warning m-0">
          <button class="close" data-dismiss="alert">
            Ã—
          </button>
          <i class="fa-fw fa fa-info"></i>
          {% if summary is not empty %}
            {{ summary }}
          {% endif %}
          {% if description is not empty %}
            {{ description }}
          {% endif %}
        </div>
      {% endif %}

      <div class="table">
        <table{{ attributes.addClass(classes) }}>
          {% for colgroup in colgroups %}
            {% if colgroup.cols %}
              <colgroup{{ colgroup.attributes }}>
                {% for col in colgroup.cols %}
                  <col{{ col.attributes }} />
                {% endfor %}
              </colgroup>
            {% else %}
              <colgroup{{ colgroup.attributes }} />
            {% endif %}
          {% endfor %}
          {% if header %}
            <thead>
            <tr>
              {% for cell in header %}
              {%
                set cell_classes = [
                cell.active_table_sort ? 'is-active',
              ]
              %}
              <{{ cell.tag }}{{ cell.attributes.addClass(cell_classes) }}>
              {{- cell.content -}}
            </{{ cell.tag }}>
            {% endfor %}
            </tr>
            </thead>
          {% endif %}
          {% if rows %}
            <tbody>
            {% for row in rows %}
              {%
                set row_classes = [
                not no_striping ? cycle(['odd', 'even'], loop.index0),
              ]
              %}
            <tr{{ row.attributes.addClass(row_classes) }}>
              {% for cell in row.cells %}
                <{{ cell.tag }}{{ cell.attributes }}>
                {{- cell.content -}}
                </{{ cell.tag }}>
              {% endfor %}
              </tr>
            {% endfor %}
            </tbody>
          {% elseif empty %}
            <tbody>
            <tr class="odd">
              <td colspan="{{ header_columns }}" class="empty message">{{ empty }}</td>
            </tr>
            </tbody>
          {% endif %}

          {% if footer %}
            <tfoot>
            {% for row in footer %}
            <tr{{ row.attributes }}>
              {% for cell in row.cells %}
                <{{ cell.tag }}{{ cell.attributes }}>
                {{- cell.content -}}
                </{{ cell.tag }}>
              {% endfor %}
              </tr>
            {% endfor %}
            </tfoot>
          {% endif %}
        </table>

      </div>
    </div>
    <!-- end widget content -->

  </div>
  <!-- end widget div -->
</div>