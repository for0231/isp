<?php

/**
 * @file
 * Contains isp_server.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function isp_server_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the isp_server module.
    case 'help.page.isp_server':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The base servers.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function isp_server_theme() {
  $theme = [];
  $theme['isp_server'] = [
    'render element' => 'elements',
    'file' => 'isp_server.page.inc',
    'template' => 'isp_server',
  ];
  $theme['isp_server_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'isp_server.page.inc',
  ];
  return $theme;
}

/**
* Implements hook_theme_suggestions_HOOK().
*/
function isp_server_theme_suggestions_isp_server(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#isp_server'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'isp_server__' . $sanitized_view_mode;
  $suggestions[] = 'isp_server__' . $entity->bundle();
  $suggestions[] = 'isp_server__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'isp_server__' . $entity->id();
  $suggestions[] = 'isp_server__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_entity_base_field_info().
 */
function isp_server_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() == 'commerce_order_item') {
    $fields = [];

    $fields['servers'] = BaseFieldDefinition::create('entity_reference')
      ->setLabel(t('Servers'))
      ->setSetting('target_type', 'isp_server')
      ->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED)
      ->addConstraint('ServerUnique')
      ->setDisplayOptions('view', [
        'type' => 'entity_reference_label',
        'weight' => 6,
      ])
      ->setDisplayOptions('form', [
        'type' => 'entity_reference_autocomplete',
        'weight' => 6,
        'settings' => [
          'match_operator' => 'CONTAINS',
          'size' => '60',
          'placeholder' => '',
        ],
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);

    return $fields;
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function isp_server_commerce_order_item_update(Drupal\Core\Entity\EntityInterface $entity) {
  // TODO 处理Server的State状态变更
  $servers = $entity->servers->referencedEntities();
  foreach ($servers as $server) {
    /** @var \Drupal\state_machine\Plugin\Field\FieldType\StateItemInterface $state_item */
    updateState($server);

    // 处理管理IP的State状态变更
    $admin_ip = $server->get('admin_ip')->entity;
    updateState($admin_ip);

    // 处理业务IP的State状态变更
    $extra_ips = $server->referencedEntities();
    foreach ($extra_ips as $extra_ip) {
      updateState($extra_ip);
    }
  }
}

function updateState($entity) {
  $state_item = $entity->get('state')->first();
  $transition = $entity->getState()->getTransitions();
  $state_item->applyTransition($transition['place']);
  $entity->save();
}
/**
 * Implements hook_ENTITY_TYPE_update().
 */
function isp_server_commerce_order_update(Drupal\Core\Entity\EntityInterface $entity) {
  $b = 'a';
  // verify server nums.

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function isp_server_form_commerce_order_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#validate'][] = 'isp_server_order_items_quantity_validate';
}

function isp_server_order_items_quantity_validate($form, FormStateInterface $form_state) {
  $order = $form_state->getFormObject()->getEntity();
  foreach ($order->order_items->referencedEntities() as $row) {
    if ($row->getQuantity() < $row->servers->count()) {
      $form_state->setErrorByName('order_items[actions][bundle]', t('The order item quantity is not correct.'));
    }
  }
}